/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from 'ethers';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';
import { TypedEventFilter, TypedEvent, TypedListener } from './commons';

interface NftdropInterface extends ethers.utils.Interface {
  functions: {
    'emergencyExecute(address,bytes)': FunctionFragment;
    'getSigner(address,bytes32,bytes32,uint8)': FunctionFragment;
    'hasReedeemed(address)': FunctionFragment;
    'nftAddress()': FunctionFragment;
    'nftTokenId()': FunctionFragment;
    'onERC1155Received(address,address,uint256,uint256,bytes)': FunctionFragment;
    'owner()': FunctionFragment;
    'redeemNft(address,bytes32,bytes32,uint8)': FunctionFragment;
    'supportsInterface(bytes4)': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'emergencyExecute',
    values: [string, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'getSigner',
    values: [string, BytesLike, BytesLike, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'hasReedeemed',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'nftAddress',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'nftTokenId',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'onERC1155Received',
    values: [string, string, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'redeemNft',
    values: [string, BytesLike, BytesLike, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'supportsInterface',
    values: [BytesLike],
  ): string;

  decodeFunctionResult(
    functionFragment: 'emergencyExecute',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'getSigner', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'hasReedeemed',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'nftAddress', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'nftTokenId', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'onERC1155Received',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'redeemNft', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'supportsInterface',
    data: BytesLike,
  ): Result;

  events: {};
}

export class Nftdrop extends Contract {
  'connect'(signerOrProvider: Signer | Provider | string): this;
  'attach'(addressOrName: string): this;
  'deployed'(): Promise<this>;

  'listeners'<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>,
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  'off'<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>,
  ): this;
  'on'<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>,
  ): this;
  'once'<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>,
  ): this;
  'removeListener'<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>,
  ): this;
  'removeAllListeners'<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
  ): this;

  'listeners'(eventName?: string): Array<Listener>;
  'off'(eventName: string, listener: Listener): this;
  'on'(eventName: string, listener: Listener): this;
  'once'(eventName: string, listener: Listener): this;
  'removeListener'(eventName: string, listener: Listener): this;
  'removeAllListeners'(eventName?: string): this;

  'queryFilter'<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  'interface': NftdropInterface;

  'functions': {
    emergencyExecute(
      targetAddress: string,
      targetCallData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    'emergencyExecute(address,bytes)'(
      targetAddress: string,
      targetCallData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    getSigner(
      aCustomAddress: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    'getSigner(address,bytes32,bytes32,uint8)'(
      aCustomAddress: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    hasReedeemed(
      address1: string,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    'hasReedeemed(address)'(
      address1: string,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    nftAddress(overrides?: CallOverrides): Promise<[string]>;

    'nftAddress()'(overrides?: CallOverrides): Promise<[string]>;

    nftTokenId(overrides?: CallOverrides): Promise<[BigNumber]>;

    'nftTokenId()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    onERC1155Received(
      operator: string,
      from: string,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    'onERC1155Received(address,address,uint256,uint256,bytes)'(
      operator: string,
      from: string,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    'owner()'(overrides?: CallOverrides): Promise<[string]>;

    redeemNft(
      address1: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    'redeemNft(address,bytes32,bytes32,uint8)'(
      address1: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    'supportsInterface(bytes4)'(
      interfaceID: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;
  };

  'emergencyExecute'(
    targetAddress: string,
    targetCallData: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'emergencyExecute(address,bytes)'(
    targetAddress: string,
    targetCallData: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'getSigner'(
    aCustomAddress: string,
    r: BytesLike,
    s: BytesLike,
    v: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string>;

  'getSigner(address,bytes32,bytes32,uint8)'(
    aCustomAddress: string,
    r: BytesLike,
    s: BytesLike,
    v: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string>;

  'hasReedeemed'(address1: string, overrides?: CallOverrides): Promise<boolean>;

  'hasReedeemed(address)'(
    address1: string,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  'nftAddress'(overrides?: CallOverrides): Promise<string>;

  'nftAddress()'(overrides?: CallOverrides): Promise<string>;

  'nftTokenId'(overrides?: CallOverrides): Promise<BigNumber>;

  'nftTokenId()'(overrides?: CallOverrides): Promise<BigNumber>;

  'onERC1155Received'(
    operator: string,
    from: string,
    id: BigNumberish,
    value: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'onERC1155Received(address,address,uint256,uint256,bytes)'(
    operator: string,
    from: string,
    id: BigNumberish,
    value: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'owner'(overrides?: CallOverrides): Promise<string>;

  'owner()'(overrides?: CallOverrides): Promise<string>;

  'redeemNft'(
    address1: string,
    r: BytesLike,
    s: BytesLike,
    v: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'redeemNft(address,bytes32,bytes32,uint8)'(
    address1: string,
    r: BytesLike,
    s: BytesLike,
    v: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  'supportsInterface'(
    interfaceID: BytesLike,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  'supportsInterface(bytes4)'(
    interfaceID: BytesLike,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  'callStatic': {
    emergencyExecute(
      targetAddress: string,
      targetCallData: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'emergencyExecute(address,bytes)'(
      targetAddress: string,
      targetCallData: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    getSigner(
      aCustomAddress: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string>;

    'getSigner(address,bytes32,bytes32,uint8)'(
      aCustomAddress: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string>;

    hasReedeemed(address1: string, overrides?: CallOverrides): Promise<boolean>;

    'hasReedeemed(address)'(
      address1: string,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    nftAddress(overrides?: CallOverrides): Promise<string>;

    'nftAddress()'(overrides?: CallOverrides): Promise<string>;

    nftTokenId(overrides?: CallOverrides): Promise<BigNumber>;

    'nftTokenId()'(overrides?: CallOverrides): Promise<BigNumber>;

    onERC1155Received(
      operator: string,
      from: string,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>;

    'onERC1155Received(address,address,uint256,uint256,bytes)'(
      operator: string,
      from: string,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    'owner()'(overrides?: CallOverrides): Promise<string>;

    redeemNft(
      address1: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'redeemNft(address,bytes32,bytes32,uint8)'(
      address1: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'supportsInterface(bytes4)'(
      interfaceID: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;
  };

  'filters': {};

  'estimateGas': {
    emergencyExecute(
      targetAddress: string,
      targetCallData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    'emergencyExecute(address,bytes)'(
      targetAddress: string,
      targetCallData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    getSigner(
      aCustomAddress: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getSigner(address,bytes32,bytes32,uint8)'(
      aCustomAddress: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    hasReedeemed(
      address1: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'hasReedeemed(address)'(
      address1: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    nftAddress(overrides?: CallOverrides): Promise<BigNumber>;

    'nftAddress()'(overrides?: CallOverrides): Promise<BigNumber>;

    nftTokenId(overrides?: CallOverrides): Promise<BigNumber>;

    'nftTokenId()'(overrides?: CallOverrides): Promise<BigNumber>;

    onERC1155Received(
      operator: string,
      from: string,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    'onERC1155Received(address,address,uint256,uint256,bytes)'(
      operator: string,
      from: string,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>;

    redeemNft(
      address1: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    'redeemNft(address,bytes32,bytes32,uint8)'(
      address1: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'supportsInterface(bytes4)'(
      interfaceID: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  'populateTransaction': {
    emergencyExecute(
      targetAddress: string,
      targetCallData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    'emergencyExecute(address,bytes)'(
      targetAddress: string,
      targetCallData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    getSigner(
      aCustomAddress: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getSigner(address,bytes32,bytes32,uint8)'(
      aCustomAddress: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    hasReedeemed(
      address1: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'hasReedeemed(address)'(
      address1: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    nftAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'nftAddress()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    nftTokenId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'nftTokenId()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    onERC1155Received(
      operator: string,
      from: string,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    'onERC1155Received(address,address,uint256,uint256,bytes)'(
      operator: string,
      from: string,
      id: BigNumberish,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redeemNft(
      address1: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    'redeemNft(address,bytes32,bytes32,uint8)'(
      address1: string,
      r: BytesLike,
      s: BytesLike,
      v: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'supportsInterface(bytes4)'(
      interfaceID: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
